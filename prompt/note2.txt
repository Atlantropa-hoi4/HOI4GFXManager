이 기능들은 **분석 및 검증**, **편집 및 관리**, **사용자 경험 개선** 세 가지 방향으로 나누어 볼 수 있습니다.

---

### ## 분석 및 검증 기능 🔎

모드의 안정성을 높이고 오류를 사전에 방지하는 데 초점을 맞춘 기능입니다.

* **미사용 GFX 탐지 (Orphan Detector)**
    `.gfx` 파일에 정의는 되어 있지만, 실제 국가 중점, 이벤트, 아이디어 등 **어떤 코드에서도 사용되지 않는 GFX를 찾아 목록으로 보여줍니다.** 이를 통해 불필요한 데이터를 정리하여 모드 용량을 최적화할 수 있습니다.

* **누락된 GFX 정의 탐지 (Missing Definition Detector)**
    코드(예: `icon = GFX_my_awesome_icon`)에서는 사용하고 있으나, **실제로는 `.gfx` 파일에 정의되지 않은 GFX를 찾아 경고**해 줍니다. 이는 게임 실행 시 `error.log`에 오류를 발생시키는 주된 원인 중 하나이므로 매우 유용한 기능입니다.

* **파일 경로 유효성 검사 (File Path Validator)**
    `.gfx` 파일의 `texturefile` 경로에 **실제로 `.dds` 파일이 존재하는지 확인**합니다. 만약 파일이 없거나 경로가 잘못되었다면, 해당 GFX 항목을 시각적으로 구분하여 (예: 붉은색 표시) 알려줍니다.

* **중복 정의 검사 (Duplicate Definition Checker)**
    **동일한 `name`을 가진 GFX가 여러 `.gfx` 파일에 중복으로 정의된 경우를 찾아냅니다.** 이는 의도치 않은 GFX 덮어쓰기 문제를 예방하는 데 도움이 됩니다.

---

### ## 편집 및 관리 기능 ✏️

단순한 뷰어를 넘어, GFX 에셋을 직접 생성하고 수정하는 강력한 편집 도구로 발전시키는 기능입니다.

* **GFX 생성 및 수정 (Create & Edit)**
    GUI 양식을 통해 새로운 GFX 항목을 직접 추가하거나 기존 항목을 수정할 수 있습니다. 사용자가 GFX 이름과 `.dds` 파일만 선택하면, **도구가 자동으로 정확한 형식의 코드를 `.gfx` 파일에 추가하거나 수정**해 줍니다.

* **안전한 GFX 삭제 (Safe Delete)**
    GFX를 삭제하기 전에 **"분석 및 검증" 기능과 연동**합니다. 만약 삭제하려는 GFX가 코드 어딘가에서 사용 중이라면, "이 GFX는 N개의 파일에서 사용 중입니다. 정말 삭제하시겠습니까?"라는 경고 메시지와 함께 사용처 목록을 보여주어 실수를 방지합니다.

* **일괄 임포트 (Batch Import)**
    사용자가 특정 폴더를 지정하면, 그 안에 있는 **모든 `.dds` 파일을 읽어와 한 번에 GFX 정의를 자동으로 생성**해 주는 기능입니다. 수십 개의 아이콘을 한 번에 추가할 때 매우 유용합니다.

* **이름 변경 및 리팩토링 (Rename & Refactor)**
    가장 강력한 기능 중 하나로, GFX의 `name`을 변경하면 **해당 GFX를 사용하고 있는 모든 코드(.txt 파일 등)를 자동으로 찾아가 새로운 이름으로 교체**해 줍니다. 모드 구조를 변경하거나 이름을 일관성 있게 정리할 때 엄청난 시간을 절약해 줍니다.

---

### ## 사용자 경험(UX) 개선 기능 ✨

도구를 더 편리하고 효율적으로 사용할 수 있도록 만드는 기능입니다.

* **고급 검색 및 필터링**
    GFX 이름의 일부만으로 검색하거나, '미사용 GFX만 보기', '특정 파일에 정의된 GFX만 보기' 등 다양한 조건으로 목록을 필터링할 수 있습니다.

* **코드 바로가기 (Jump to Code)**
    GFX 목록이나 사용처 목록에서 항목을 더블 클릭하면, **연결된 `.gfx` 파일이나 해당 코드가 있는 `.txt` 파일을 VS Code와 같은 외부 편집기에서 바로 열어주는 기능**입니다.

* **다크 모드 및 테마 지원**
    사용자의 작업 환경에 맞춰 라이트 모드와 다크 모드 전환 기능을 제공합니다.

* **프로젝트 관리**
    여러 모드 프로젝트를 목록에 저장해두고 쉽게 전환할 수 있는 기능을 추가하여, 사용자가 매번 모드 폴더를 다시 선택할 필요가 없도록 편의성을 높입니다.

### **개발 로드맵 제안**

1.  **MVP 이후:** **분석 및 검증 기능**을 먼저 구현하여 "읽기 전용" 분석 도구로서의 완성도를 높입니다.
2.  **그 다음:** **생성, 수정, 삭제 기능**을 추가하여 본격적인 관리 도구로 발전시킵니다.
3.  **마지막으로:** **리팩토링, 일괄 임포트, UX 개선 기능**들을 추가하여 전문가 수준의 강력한 유틸리티로 완성합니다.