네, GUI 인터페이스의 시각적 구조를 미리 볼 수 있는 `.gui` 파일 뷰어 개발을 위한 상세 Claude Code 프롬프트를 작성해 드리겠습니다.

이 프롬프트는 파싱(parsing), 렌더링(rendering), 그리고 기존 GFX 데이터와의 연동에 초점을 맞춥니다.

-----

### **Claude Code용 `.gui` 파일 뷰어 개발 프롬프트**

```markdown
안녕하세요. Python/PyQt6 기반의 "HOI4 GFX 통합 관리 도구"에 추가될 새로운 핵심 기능인 "GUI 인터페이스 프리뷰어"를 개발하려고 합니다.

**프로젝트 목표:**
HOI4 모드의 `.gui` 파일을 읽어 그 안에 정의된 인터페이스 요소(창, 버튼, 아이콘 등)들의 레이아웃을 **시각적으로 렌더링하여 미리 보여주는 위젯을 개발**합니다. 이 프리뷰는 실제 게임처럼 상호작용할 필요는 없으며, **순수하게 시각적인 배치와 모양을 확인**하는 것이 목적입니다.

**기술 스택:**
* **언어:** Python
* **GUI 라이브러리:** PyQt6
* **의존성:** 이 기능은 이전에 개발한 GFX 관리자를 통해 이미 로드된 **"GFX 이름-이미지 경로 사전(Dictionary)" 데이터에 접근할 수 있다고 가정**합니다.

**구현할 기능 명세:**
1.  **`.gui` 파일 파서(Parser) 개발:**
    * HOI4의 독자적인 스크립트 형식으로 작성된 `.gui` 파일을 정확하게 파싱하는 기능이 필요합니다.
    * `windowType`, `iconType`, `buttonType`, `instantTextBoxType` 등 주요 GUI 요소들의 속성(name, position, size, spriteType, text 등)을 추출하여 구조화된 데이터로 변환해야 합니다.

2.  **렌더링 캔버스(Canvas) 위젯 구현:**
    * 파싱된 데이터를 기반으로 GUI 요소들을 그려낼 별도의 `QWidget`를 생성합니다. 이 위젯이 프리뷰 화면이 됩니다.
    * 가장 바깥쪽 `windowType`의 `size`를 기준으로 캔버스의 크기를 설정합니다.

3.  **GUI 요소 렌더링 로직:**
    * **`windowType`:** `position`과 `size` 속성을 이용해 반투명한 사각형을 그립니다. `background`가 정의되어 있다면 해당 GFX를 배경으로 렌더링합니다.
    * **`iconType`, `buttonType`:** `spriteType` 값(예: `"GFX_my_icon"`)을 이용해 **"GFX 이름-이미지 경로 사전"**에서 해당 이미지 파일을 찾습니다. 찾은 이미지를 `position` 값에 맞춰 캔버스에 그립니다.
    * **`instantTextBoxType`:** `text` 속성의 문자열을 `position` 값에 맞춰 캔버스에 텍스트로 그립니다. 폰트나 색상 정보도 최대한 반영합니다.
    * **기타 PDX HOI4 문법에 맞는 코드들**

4.  **좌표 시스템 처리:**
    * `.gui` 파일 내의 `position = { x = 10 y = 20 }` 와 같은 절대 좌표계를 올바르게 해석하여 렌더링 위치를 결정해야 합니다. (상대 좌표 `%`는 MVP 단계에서는 제외해도 좋습니다.)

**참고: `.gui` 파일의 구조 예시**

```

guiTypes = {
    windowType = {
        name = "my\_custom\_window"
        position = { x = 100 y = 100 }
        size = { width = 400 height = 250 }

        background = {
            name = "background"
            spriteType = "GFX_tiled_window_transparent"
        }

        iconType = {
            name = "my_window_icon"
            position = { x = 20 y = 20 }
            spriteType = "GFX_idea_generic_agrarian_society"
        }

        instantTextBoxType = {
            name = "my_window_title"
            position = { x = 100 y = 25 }
            text = "My Custom Window"
            font = "hoi_18b"
            maxWidth = 200
            format = left
        }
    }
}

```

**요청 사항:**
위의 요구사항을 만족하는 `.gui` 파일 프리뷰어 `QWidget` 클래스를 작성해주세요. 이 위젯은 나중에 메인 애플리케이션에 통합될 수 있도록 모듈화된 형태로 작성되어야 합니다. 설명을 위해, 이 위젯을 단독으로 실행하여 특정 `.gui` 파일을 로드하고 보여주는 예시 코드도 함께 포함해 주세요.
```