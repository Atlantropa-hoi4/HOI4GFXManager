안녕하세요. 이전에 작성했던 Python/PyQt6 기반의 "GFX 통합 관리 도구" MVP 코드에 이어서 새로운 기능을 추가하려고 합니다.

**신규 기능 목표:**
사용자가 파일 탐색기에서 `.dds, .png` 이미지 파일을 프로그램 창으로 직접 드래그 앤 드롭(Drag and Drop)하여 새로운 GFX 항목으로 쉽게 추가할 수 있도록 만듭니다.

**상세 구현 명세:**
1.  **드래그 앤 드롭 활성화:** 메인 윈도우가 파일 드롭 이벤트를 받을 수 있도록 설정해주세요 (`setAcceptDrops(True)`).
2.  **이벤트 처리 로직:**
    * `dragEnterEvent`를 구현하여, 드롭하려는 파일이 이미지 파일인 경우에만 드롭을 허용하는 시각적 피드백(예: 마우스 커서 변경)을 제공해야 합니다.
    * `dropEvent`를 구현하여, 파일 드롭이 완료되었을 때의 핵심 로직을 처리해야 합니다.
3.  **사용자 입력 다이얼로그:**
    * 하나 이상의 이미지 파일이 드롭되면, 각 파일에 대해 순차적으로 사용자 입력을 받는 별도의 다이얼로그(`QDialog`) 창을 띄워주세요.
    * 이 다이얼로그에는 두 가지 입력 필드가 필요합니다.
        1.  **GFX 이름 (name):** 새로 추가될 GFX의 `name`을 입력받는 텍스트 필드. 파일명을 기반으로 (`GFX_` + `파일명`) 자동 완성된 기본값을 제안하면 좋습니다. (예: `my_icon.dds` -> `GFX_my_icon`)
        2.  **저장할 .gfx 파일 선택:** 현재 프로젝트에서 로드된 `.gfx` 파일들의 목록을 보여주는 드롭다운 메뉴(`QComboBox`). 사용자가 이 GFX 정의를 어떤 파일에 저장할지 선택하게 합니다.
        3.  **이미지 파일을 저장할 경로.**
4.  **파일 쓰기 및 UI 갱신:**
    * 사용자가 다이얼로그에서 정보를 입력하고 '확인'을 누르면, 선택된 `.gfx` 파일의 맨 아래에 새로운 `spriteType` 블록을 정확한 형식으로 추가해야 합니다.
    * 성공적으로 파일에 추가된 후, 메인 윈도우 좌측의 GFX 목록(`QListWidget`)을 새로고침하여 방금 추가된 항목이 즉시 보이도록 해야 합니다.
    * 경로가 .gfx 파일의 코드에도 동일하게 적용됩니다.
**요청 사항:**
이전 MVP 코드(폴더를 열어 GFX를 목록에 표시하고 이미지를 미리 보는 코드)를 기반으로, 위에 명시된 드래그 앤 드롭 기능이 완벽하게 작동하도록 코드를 **수정 및 확장**해 주세요.