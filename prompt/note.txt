네, 바로 복사해서 사용하실 수 있도록 마크다운 코드 블록 형식으로 제공해 드립니다.

안녕하세요. 당신은 Python과 PyQt6를 전문으로 다루는 숙련된 데스크톱 애플리케이션 개발자입니다. 지금부터 저와 함께 Hearts of Iron IV (HOI4) 모딩을 위한 "GFX 통합 관리 도구" 개발을 시작하겠습니다.

**프로젝트 목표:**
HOI4 모드 폴더 내의 `.gfx` 파일들을 분석하여, 정의된 그래픽 에셋(GFX)의 목록을 보여주고, 목록에서 특정 GFX를 선택했을 때 해당 이미지를 미리 보여주는 GUI 애플리케이션의 초기 버전(MVP)을 제작합니다.

**기술 스택:**
* **언어:** Python
* **GUI 라이브러리:** PyQt6
* **이미지 처리 라이브러리:** `Pillow` 및 `Pillow-DDS-Extended` (DDS 이미지 파일을 처리하기 위함)

**구현할 기능 명세 (MVP):**
1.  사용자가 GUI를 통해 로컬 컴퓨터의 '모드 폴더'를 선택할 수 있는 "모드 폴더 열기" 버튼을 만듭니다.
2.  폴더가 선택되면, 해당 폴더 및 그 하위 경로에 있는 모든 `.gfx` 파일을 찾습니다. (주로 `interface` 폴더 내에 위치합니다.)
3.  찾아낸 `.gfx` 파일들의 내용을 파싱(parsing)하여, `spriteType` 블록 내에 있는 `name`과 `texturefile` 값을 추출합니다.
4.  추출된 모든 `name`의 목록을 UI 좌측의 리스트 위젯(`QListWidget`)에 표시합니다.
5.  사용자가 리스트에서 특정 `name`을 클릭하면, 연결된 `texturefile` 경로를 이용해 해당 `.dds` 이미지 파일을 찾습니다.
6.  `Pillow-DDS-Extended` 라이브러리를 사용하여 `.dds` 파일을 열고, 이를 UI 우측의 이미지 레이블(`QLabel`)에 미리보기로 표시합니다.

**참고: `.gfx` 파일의 구조 예시**
`.gfx` 파일은 아래와 같은 간단한 텍스트 형식입니다. 중첩된 괄호 구조를 가지고 있습니다.


# 주석은 \#으로 시작합니다.

spriteTypes = {
    spriteType = {
        name = "GFX_focus_generic_major_war"
        texturefile = "gfx/interface/goals/goal_generic_major_war.dds"
    }

    spriteType = {
        name = "GFX_idea_limited_conscription"
        texturefile = "gfx/interface/ideas/idea_limited_conscription.dds"
    }
     이 안에 더 많은 spriteType이 있을 수 있습니다.
}


**요청 사항:
위의 모든 요구사항을 만족하는, 단일 Python 파일로 구성된 **완전하고 바로 실행 가능한 코드**를 작성해 주세요. 코드에는 각 부분이 어떤 역할을 하는지 이해하기 쉽도록 주석을 포함해 주세요. 사용자가 라이브러리를 설치할 수 있도록 필요한 `pip install` 명령어 목록도 코드 상단 주석에 명시해 주시기 바랍니다.